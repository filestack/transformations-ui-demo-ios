// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target x86_64-apple-ios9.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name UberSegmentedControl
import Swift
import UIKit
@objc open class UberSegmentedControl : UIKit.UIControl {
  public class var noSegment: Swift.Int {
    get
  }
  public var allowsMultipleSelection: Swift.Bool {
    get
  }
  open var isMomentary: Swift.Bool {
    get
    set
  }
  open var numberOfSegments: Swift.Int {
    get
  }
  @objc override dynamic open var intrinsicContentSize: CoreGraphics.CGSize {
    @objc get
  }
  public init(items: [Any]?, allowsMultipleSelection: Swift.Bool = false)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
}
extension UberSegmentedControl {
  @objc override dynamic open func layoutSubviews()
  @objc override dynamic open func didMoveToSuperview()
  @objc override dynamic open func removeFromSuperview()
}
extension UberSegmentedControl {
  open func insertSegment(withTitle title: Swift.String?, at segment: Swift.Int, animated: Swift.Bool)
  open func insertSegment(with image: UIKit.UIImage?, at segment: Swift.Int, animated: Swift.Bool)
  open func removeSegment(at segment: Swift.Int, animated: Swift.Bool)
  open func removeAllSegments()
  open func setTitle(_ title: Swift.String?, forSegmentAt segment: Swift.Int)
  open func titleForSegment(at segment: Swift.Int) -> Swift.String?
  open func setImage(_ image: UIKit.UIImage?, forSegmentAt segment: Swift.Int)
  open func imageForSegment(at segment: Swift.Int) -> UIKit.UIImage?
  open func setEnabled(_ enabled: Swift.Bool, forSegmentAt segment: Swift.Int)
  open func isEnabledForSegment(at segment: Swift.Int) -> Swift.Bool
  open func setSegmentSemanticContentAttribute(at segment: Swift.Int, attribute: UIKit.UISemanticContentAttribute)
  open func setSegmentImageEdgeInsets(at segment: Swift.Int, insets: UIKit.UIEdgeInsets)
  open func setSegmentTitleEdgeInsets(at segment: Swift.Int, insets: UIKit.UIEdgeInsets)
  open var selectedSegmentTintColor: UIKit.UIColor? {
    get
  }
  @objc dynamic open var selectedSegmentIndexes: Foundation.IndexSet {
    @objc get
    @objc set
  }
  @objc dynamic open var selectedSegmentIndex: Swift.Int {
    @objc get
    @objc set
  }
}
extension UberSegmentedControl : UIKit.UIGestureRecognizerDelegate {
  @objc dynamic public func gestureRecognizer(_ gestureRecognizer: UIKit.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
}
